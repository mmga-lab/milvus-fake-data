name: Update Lock File

on:
  push:
    branches: [ main ]
    paths:
      - 'pyproject.toml'
  workflow_dispatch:

jobs:
  update-lockfile:
    name: Update PDM Lock File
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: "3.11"
          cache: true

      - name: Update lock file
        run: |
          pdm lock --update-reuse

      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.verify-changed-files.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            deps: update lock file

            Auto-update PDM lock file after pyproject.toml changes
          title: "deps: update PDM lock file"
          body: |
            ## ðŸ¤– Automated Lock File Update

            This PR was automatically created to update the PDM lock file after changes to `pyproject.toml`.

            ### Changes
            - Updated `pdm.lock` to reflect latest dependency versions
            - Ensures all environments use consistent dependency versions

            ### Verification
            - [ ] Lock file changes look correct
            - [ ] CI tests pass
            - [ ] No unexpected dependency additions/removals

            This PR will be auto-merged if all checks pass.
          branch: update-lockfile
          delete-branch: true
          labels: |
            dependencies
            automated
          reviewers: |
            zhuwenxing

      - name: Enable auto-merge
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          sleep 10  # Wait for PR to be created
          gh pr merge update-lockfile --auto --squash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}