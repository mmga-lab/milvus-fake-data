name: Project Management

on:
  issues:
    types: [opened, labeled, unlabeled, closed, reopened]
  pull_request:
    types: [opened, labeled, unlabeled, closed, reopened, ready_for_review]
  pull_request_review:
    types: [submitted]

jobs:
  label-issues:
    name: Auto-label Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    permissions:
      issues: write
    steps:
      - name: Label bug reports
        if: contains(github.event.issue.title, '[BUG]') || contains(github.event.issue.body, 'bug')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['bug', 'needs-triage']
            })

      - name: Label feature requests
        if: contains(github.event.issue.title, '[FEATURE]') || contains(github.event.issue.body, 'feature request')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['enhancement', 'needs-triage']
            })

      - name: Label documentation issues
        if: contains(github.event.issue.title, '[DOCS]') || contains(github.event.issue.body, 'documentation')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['documentation']
            })

  label-prs:
    name: Auto-label Pull Requests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    permissions:
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Label based on changed files
        uses: actions/github-script@v7
        with:
          script: |
            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            const labels = [];
            const filenames = files.map(file => file.filename);

            // Check for different types of changes
            if (filenames.some(f => f.includes('test'))) {
              labels.push('tests');
            }
            if (filenames.some(f => f.includes('.github/workflows'))) {
              labels.push('ci/cd');
            }
            if (filenames.some(f => f.includes('README') || f.includes('.md'))) {
              labels.push('documentation');
            }
            if (filenames.some(f => f.includes('Dockerfile') || f.includes('docker'))) {
              labels.push('docker');
            }
            if (filenames.some(f => f.includes('pyproject.toml') || f.includes('requirements'))) {
              labels.push('dependencies');
            }
            if (filenames.some(f => f.includes('src/milvus_fake_data'))) {
              labels.push('core');
            }

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: labels
              });
            }

  size-label:
    name: Add Size Label to PRs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')
    permissions:
      pull-requests: write
    steps:
      - name: Add size label
        uses: pascalgn/size-label-action@v0.4.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          sizes: >
            {
              "0": "XS",
              "10": "S",
              "30": "M",
              "100": "L",
              "500": "XL",
              "1000": "XXL"
            }

  stale-issues:
    name: Mark Stale Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Stale issues and PRs
        uses: actions/stale@v8
        with:
          stale-issue-message: |
            This issue has been automatically marked as stale because it has not had recent activity. 
            It will be closed if no further activity occurs. Thank you for your contributions.
          stale-pr-message: |
            This pull request has been automatically marked as stale because it has not had recent activity. 
            It will be closed if no further activity occurs. Thank you for your contributions.
          close-issue-message: |
            This issue was closed because it has been stalled for too long with no activity.
          close-pr-message: |
            This pull request was closed because it has been stalled for too long with no activity.
          stale-issue-label: 'stale'
          stale-pr-label: 'stale'
          days-before-stale: 60
          days-before-close: 7
          exempt-issue-labels: 'pinned,security,enhancement'
          exempt-pr-labels: 'pinned,security,enhancement'

  welcome:
    name: Welcome New Contributors
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    steps:
      - name: Welcome first-time contributors
        uses: actions/github-script@v7
        with:
          script: |
            // Check if this is the user's first contribution
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              creator: context.payload.pull_request.user.login
            });

            if (prs.length === 1) {
              await github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `
                  ðŸŽ‰ Thank you for your first contribution to milvus-fake-data! 

                  We're excited to have you as part of our community. A few things to note:
                  - Make sure all tests pass
                  - Follow our coding standards
                  - Update documentation if needed
                  - Feel free to ask questions if you need help

                  Our maintainers will review your PR soon. Thanks again! ðŸš€
                  `
              });
            }